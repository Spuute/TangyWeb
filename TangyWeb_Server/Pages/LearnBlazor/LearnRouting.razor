@page "/learnRouting"
@page "/learnBlazor/learnRouting/"
@page "/learnBlazor/learnRouting/{parameter1}"
@page "/learnBlazor/learnRouting/{parameter1:int}/{parameter2}"

@inject NavigationManager _NavigationManager

<h3>LearnRouting</h3>
<h4>Parameter 1: @Parameter1</h4>
<h4>Parameter 2: @Parameter2</h4>

<div class="row mt-5">
    <a href="/learnRouting?Param1=Tangy&Param2=Blazor" class="btn btn-primary">Navigate to query parameter</a>
    <button @onclick="NavigateToQueryParam" class="btn btn-primary mt-2">Navigate to query parameter with button</button>
    <button class="btn btn-success mt-2" @onclick="LoadParameters">Load Parameter</button>
</div>
<br>

<h3>Query String Parameters: </h3>
<h4>Param1: @Param1</h4>
<h4>Param2: @Param2</h4>

@code {
    [Parameter]
    public int Parameter1 { get; set; }
    [Parameter]
    public string Parameter2 { get; set; }

    public string Param1 { get; set; }
    public string Param2 { get; set; }

    private void LoadParameters() {
        var absoluteUri = new Uri(_NavigationManager.Uri);
        var queryParam = System.Web.HttpUtility.ParseQueryString(absoluteUri.Query);
        Param1 = queryParam["Param1"];
        Param2 = queryParam["Param2"];
    } 

    private void NavigateToQueryParam() {
        _NavigationManager.NavigateTo("/learnRouting?Param1=Tangy&Param2=Blazor");
    }
}
